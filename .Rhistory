getwd()
getwd()
setwd("~/.git/STAT419")
chicago.willis.latlong = c(41.8791064,-87.6353986);
chicago.cloud.gate.latlong = c(41.8826213,-87.6234554);
chicago.lincoln.zoo.latlong = c(41.9217771,-87.6355701);
chicago.marriott.latlong = c(41.8920961,-87.6244929);
chicago.searle.latlong = c(41.8966098,-87.6175966);
chicago = as.data.frame( matrix( c(  chicago.willis.latlong,
chicago.cloud.gate.latlong,
chicago.lincoln.zoo.latlong,
chicago.marriott.latlong,
chicago.searle.latlong
)
,ncol=2,byrow=TRUE) );
rownames(chicago) = c("Willis Tower", "Cloud Gate", "Lincoln Zoo", "Marriott", "Searle NW");
colnames(chicago) = c("latitude","longitude");
chicago;
dist(chicago, method="manhattan", diag=FALSE, upper=TRUE);
# how many miles is 1 degree of latitude
latitude.factor = 69;  # rough mile estimate  # 68.703 ?
chicago$x.lat = chicago$latitude*latitude.factor;
# how many miles is 1 degree of longitude
longitude.factor = 54.6;  # rough mile estimate
chicago$y.lat = chicago$longitude*longitude.factor;
chicago;
dist(chicago[,3:4], method="manhattan", diag=FALSE, upper=TRUE);
# Other distances
dist(chicago[,3:4], method="euclidean", diag=FALSE, upper=TRUE);
dist(chicago[,3:4], method="maximum", diag=FALSE, upper=TRUE);
dist(chicago[,3:4], method="minkowski", diag=FALSE, upper=TRUE);
# same result, different package with more distance features
library(philentropy); # install.packages("philentropy", dependencies=TRUE);
install.packages("philentropy", dependencies=TRUE);
# same result, different package with more distance features
library(philentropy); #install.packages("philentropy", dependencies=TRUE);
distance(chicago[,3:4], method="euclidean", diag=FALSE, upper=TRUE);
distance(chicago[,3:4], method="canberra", diag=FALSE, upper=TRUE);
getDistMethods();  # lot's of methods, some with their own parameters ..
##################################
library(geosphere);  # install.packages("geosphere", dependencies=TRUE);
install.packages("geosphere", dependencies=TRUE);
##################################
library(geosphere);  #install.packages("geosphere", dependencies=TRUE);
# Haversine formula is robust "crow-flies"
distm( chicago[,2:1], fun=distHaversine);  # form is "long,lat" so reverse
distm( chicago[,2:1], fun=distMeeus);  # form is "long,lat" so reverse
distm( chicago[,2:1], fun=distGeo);  # form is "long,lat" so reverse
install.packages("measurements", dependencies=TRUE);
# default unit is meters, so let's convert
library(measurements); #install.packages("measurements", dependencies=TRUE);
conv_unit(2.54, "cm", "inch");
conv_unit(  distm( chicago[,2:1], fun=distHaversine),  "m", "mi"); # meters to miles
conv_unit(  distm( chicago[,2:1], fun=distMeeus),  "m", "mi"); # meters to miles
conv_unit(  distm( chicago[,2:1], fun=distGeo),  "m", "mi"); # meters to miles
